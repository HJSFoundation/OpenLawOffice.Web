@model OpenLawOffice.Web.ViewModels.Tasks.PhoneCallViewModel
@{
    ViewBag.Title = "Phone Call";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" src="/Scripts/moment.min.js"></script>
<script type="text/javascript" src="/Scripts/tinymce/tinymce.min.js"></script>
<script language="javascript">
    $(document).ready(function () {
        tinymce.init({
            selector: "#TaskAndNoteDetails",
            theme: "modern",
            toolbar: "insertfile undo redo | styleselect | bold underline italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
        });
        $("#MakeTime").click(function () {
            $("#StartRow").toggle(this.checked);
            $("#StopRow").toggle(this.checked);
            $("#BillableRow").toggle(this.checked);
        })
        $("#MakeNote").click(function () {
            $("#NoticesRow").toggle(this.checked);
            if ($("#MakeNote").prop('checked'))
                $("#NoteAndTaskLabel").text("Note & Task Details");
            else
                $("#NoteAndTaskLabel").text("Task Details");
        })
    });
</script>
<div id="roadmap">
    <div class="zero">Matter: [@(Html.ActionLink((string)ViewBag.Matter, "Details", "Matters", new { id = ViewContext.RouteData.Values["Id"] }, null))]</div>
    <div id="current" class="one">
        Phone Call
        <a id="pageInfo" class="btn-question" style="padding-left: 15px;">Help</a>
    </div>
</div>

@{
    int contactId = 0;
    dynamic profile = System.Web.Profile.ProfileBase.Create(Membership.GetUser().UserName);

    if (profile.ContactId != null && !string.IsNullOrEmpty(profile.ContactId))
    {
        contactId = int.Parse(profile.ContactId);
    }

    if (contactId <= 0)
    {
        <p>
            Your profile must be configured before using this page.  Please click "My Profile" under settings.
        </p>
    }
    else
    {
        using (Html.BeginForm())
        {
            @(Html.ValidationSummary(true))

            <table class="detail_table">
                <tr>
                    <td class="display-label" style="width: 150px;">
                        Create Time Entry
                        <span class="required-field" title="Required Field">*</span>
                    </td>
                    <td class="display-field">
                        @(Html.CheckBoxFor(model => model.MakeTime))
                        Check to create a time entry.
                    </td>
                </tr>
                <tr>
                    <td class="display-label" style="width: 150px;">
                        Create Note
                        <span class="required-field" title="Required Field">*</span>
                    </td>
                    <td class="display-field">
                        @(Html.CheckBoxFor(model => model.MakeNote))
                        Check to create a note.
                    </td>
                </tr>
                <tr id="StartRow">
                    <td class="display-label" style="width: 150px;">
                        Start Date/Time
                        <span class="required-field" title="Required Field">*</span>
                    </td>
                    <td class="display-field">
                        @(Html.TextBoxFor(model => model.Start, new { @Value = Model.Start.ToString("M/d/yyyy h:mm tt") }))
                        @(Html.ValidationMessageFor(model => model.Start))
                    </td>
                </tr>
                <tr id="StopRow">
                    <td class="display-label">
                        Stop Date/Time
                        <span class="required-field" title="Required Field">*</span>
                    </td>
                    <td class="display-field">
                        @(Html.TextBoxFor(model => model.Stop, new { @Value = Model.Stop.ToString("M/d/yyyy h:mm tt") }))
                        <img id="timeadvance" src="../../Content/fugue-icons-3.5.6/icons-shadowless/hourglass-select.png" style="cursor: pointer" alt="Advance Time" />
                        <script language="javascript">
                            $(document).ready(function () {
                                $('#timeadvance').click(function () {
                                    var stop, duration;
                                    var start = moment($('#Time_Start').val());

                                    if (moment($('#Time_Start').val()) > moment()) { // time entry in the future, must treat differently
                                        stop = moment(start).add(6, 'minutes').format('M/D/YYYY h:mm A');
                                    }
                                    else {
                                        if ($('#Time_Stop').val() == '') {
                                            duration = moment().diff(start, 'minutes');
                                        }
                                        else {
                                            stop = moment($('#Time_Stop').val());
                                            duration = stop.diff(start, 'minutes');
                                        }
                                        var minutesToAdd = 6 - (duration % 6);
                                        stop = moment(stop).add(minutesToAdd, 'minutes').format('M/D/YYYY h:mm A');
                                    }
                                    $('#Time_Stop').val(stop)
                                });
                            });
                        </script>

                        @(Html.ValidationMessageFor(model => model.Stop))
                    </td>
                </tr>
                <tr id="BillableRow">
                    <td class="display-label">
                        Billable
                        <span class="required-field" title="Required Field">*</span>
                    </td>
                    <td class="display-field">
                        @(Html.CheckBoxFor(model => model.Billable))
                        Check if time is billable.
                    </td>
                </tr>
                <tr>
                    <td class="display-label">
                        Title
                        <span class="required-field" title="Required Field">*</span>
                    </td>
                    <td class="display-field">
                        @(Html.TextBoxFor(model => model.Title, new { @style = "width: 100%;" }))
                        @(Html.ValidationMessageFor(model => model.Title))
                    </td>
                </tr>
                <tr>
                    <td class="display-label">
                        Time Entry Details
                        <span class="required-field" title="Required Field">*</span>
                    </td>
                    <td class="display-field">
                        @(Html.TextAreaFor(model => model.TimeDetails, new { @style = "width: 100%; height: 50px;" }))
                        @(Html.ValidationMessageFor(model => model.TimeDetails))
                    </td>
                </tr>
                <tr id="NoticesRow">
                    <td class="display-label">
                        Send Note Notice To
                        <br />
                        <input type="button" value="Clear Notices" name="ClearNoticeButton" id="ClearNoticeButton" />
                    </td>
                    <td class="display-field">
                        <div style="font-size: 7pt; font-style: italic; padding-bottom: 3px;">Hold ctrl while clicking to select multiple items.</div>
                        @(Html.ListBoxFor(x => x.NotifyContactIds,
                    new SelectList(Model.EmployeeContactList, "Id", "DisplayName"),
                    new { @size = 5, @style = "width: 100%" }))
                    </td>
                </tr>
                <tr>
                    <td class="display-label">
                        <span id="NoteAndTaskLabel">Note & Task Details</span>
                        <span class="required-field" title="Required Field">*</span>
                    </td>
                    <td class="display-field">
                        @(Html.TextAreaFor(model => model.TaskAndNoteDetails, new { style = "height: 200px; width: 100%;" }))
                        @(Html.ValidationMessageFor(model => model.TaskAndNoteDetails))
                    </td>
                </tr>
            </table>
            <p>
                <input type="submit" value="Save" />
            </p>
        }
    }
    <div id="pageInfoDialog" title="Help">
        <p>
            <span style="font-weight: bold; text-decoration: underline;">Info:</span>
            Fill in the information on this page to create a new task.  Required fields are indicated with an
            <span style="color: #ee0000;font-size: 12px;cursor:help;" title="Required Field">*</span>
            <br />
            <br />
            <span style="font-weight: bold; text-decoration: underline;">Usage:</span>
            Select a "parent" task to make this task be a "subtask" of another task.  To deselect a parent task, click "clear".
            Fields marked with an
            <span style="color: #ee0000;font-size: 12px;cursor:help;" title="Required Field">*</span> are required.
        </p>
    </div>
}